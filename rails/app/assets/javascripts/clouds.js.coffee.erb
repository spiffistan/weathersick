camera = null
renderer = null
scene = null
geometry = null
material = null
fog = null

paused = false

startTime = new Date().getTime()

fov = 30
aspect = window.innerWidth / window.innerHeight
cameraNear = 1
cameraFar = 8000

fogColor = 0x4584b4
fogNear = -1
fogFar = 3000

stats = new Stats()
stats.setMode(1)
stats.domElement.style.position = 'absolute'
stats.domElement.style.left = '0px'
stats.domElement.style.top = '0px'
document.body.appendChild(stats.domElement)

init = ->

  container = document.createElement('div')

  $(container).addClass('clouds')
  $('body').append($(container))

  camera = new THREE.Camera(fov, aspect, cameraNear, cameraFar)
  scene = new THREE.Scene()
  geometry = new THREE.Geometry()
  fog = new THREE.Fog(fogColor, fogNear, fogFar)

  texture = THREE.ImageUtils.loadTexture("<%= asset_path 'cloud10.png' %>")
  texture.magFilter = THREE.LinearMipMapNearestFilter
  texture.minFilter = THREE.LinearMipMapLinearFilter

  camera.position.z = 8000 # TODO
  
  material = new THREE.MeshShaderMaterial(
    uniforms:
      map:
        type: 't'
        value: 2
        texture: texture
      fogColor:
        type: 'c'
        value: fog.color
      fogNear:
        type: 'f'
        value: fog.near
      fogFar:
        type: 'f'
        value: fog.far
    vertexShader: document.getElementById( 'vs' ).textContent
    fragmentShader: document.getElementById( 'fs' ).textContent
    depthTest: false
  )

  plane = new THREE.Mesh(new THREE.Plane(64,64))

  for i in [0..8000]

    plane.position.x = Math.random() * 1000 - 500
    plane.position.y = - Math.random() * Math.random() * 200 - 30
    plane.position.z = i
    plane.rotation.z = Math.random() * Math.PI
    plane.scale.x = plane.scale.y = Math.random() * Math.random() * 1.5 + 0.5

    GeometryUtils.merge( geometry, plane )


  mesh = new THREE.Mesh( geometry, material )
  scene.addObject(mesh)

  mesh = new THREE.Mesh( geometry, material )
  mesh.position.z = - 8000
  scene.addObject( mesh )

  renderer = new THREE.WebGLRenderer( antialias: false )
  renderer.setSize( window.innerWidth, window.innerHeight )
  $(container).append(renderer.domElement)

  $('div.clouds').fadeIn(2000)

animate = ->

  if(!paused)
    requestAnimationFrame(animate)
    render()



render = ->
  stats.update()

  position = ( ( new Date().getTime() - startTime ) * 0.025 ) % 8000

  camera.position.x += (camera.target.position.x) * 0.01
  camera.position.y += (camera.target.position.y) * 0.01
  camera.position.z = - position + 8000

  camera.target.position.x = camera.position.x
  camera.target.position.y = camera.position.y
  camera.target.position.z = camera.position.z - 1000

  renderer.render( scene, camera )

if Detector.webgl
  init()
  animate()
